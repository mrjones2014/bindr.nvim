==============================================================================
USAGE EXAMPLES                                      *legendary-usage-examples*



------------------------------------------------------------------------------
FILTER ITEMS BY CURRENT MODE          *legendary-filter-items-by-current-mode*


>
    require('legendary').find({ filters = { require('legendary.filters').current_mode() } })
<

------------------------------------------------------------------------------
FILTER ITEMS BY NORMAL MODE            *legendary-filter-items-by-normal-mode*


>
    require('legendary').find({ filters = { require('legendary.filters').mode('n') } })
<

------------------------------------------------------------------------------
FILTER TO ONLY KEYMAPS AND BY CURRENT MODE*legendary-filter-to-only-keymaps-and-by-current-mode*


>
    require('legendary').find({
      filters = {
        require('legendary.filters').mode('n'),
        require('legendary.filters').keymaps(),
      },
    })
<

------------------------------------------------------------------------------
CUSTOMIZE SELECT PROMPT TITLE        *legendary-customize-select-prompt-title*


>
    require('legendary').find({ select_prompt = 'Custom prompt' })
    -- OR
    require('legendary').find({
      filters = { require('legendary.filters').keymaps() },
      select_prompt = function() -- can also be a function
        return string.format('%s | Finding Keymaps', vim.fn.getcwd())
      end,
    })
<

------------------------------------------------------------------------------
FILTER KEYMAPS BY NORMAL MODE AND THAT START WITH `<LEADER>`*legendary-filter-keymaps-by-normal-mode-and-that-start-with-`<leader>`*


>
    require('legendary').find({
      filters = {
        require('legendary.filters').mode('n'),
        function(item)
          return require('legendary.toolbox').is_keymap(item) and vim.startswith(item[1], '<leader>')
        end,
      },
    })
<

------------------------------------------------------------------------------
FILTER KEYMAPS BY CURRENT MODE, AND ONLY DISPLAY CURRENT MODE IN FIRST COLUMN*legendary-filter-keymaps-by-current-mode,-and-only-display-current-mode-in-first-column*


>
    require('legendary').find({
      filters = { require('legendary.filters').current_mode() },
      formatter = function(item, mode)
        local values = require('legendary.ui.format').default_format(item)
        if require('legendary.toolbox').is_keymap(item) then
          values[1] = mode
        end
        return values
      end
    })
<

vim:tw=78:ts=8:ft=help:norl: